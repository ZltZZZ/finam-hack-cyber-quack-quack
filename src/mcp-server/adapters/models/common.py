from pydantic import BaseModel, Field
from typing import List, Optional, Union
from datetime import datetime
from enum import Enum

class DecimalValue(BaseModel):
    """Структура для десятичных значений."""
    value: str = Field(description="Значение в виде строки")

class Money(BaseModel):
    """Структура денежных средств."""
    currency_code: str = Field(description="Код валюты")
    units: str = Field(description="Целые единицы")
    nanos: int = Field(description="Дробная часть в наносах")

class Side(str, Enum):
    """Сторона сделки."""
    SIDE_UNSPECIFIED = "SIDE_UNSPECIFIED"
    SIDE_BUY = "SIDE_BUY"
    SIDE_SELL = "SIDE_SELL"

class OrderType(str, Enum):
    """Тип заявки."""
    ORDER_TYPE_UNSPECIFIED = "ORDER_TYPE_UNSPECIFIED"
    ORDER_TYPE_MARKET = "ORDER_TYPE_MARKET"
    ORDER_TYPE_LIMIT = "ORDER_TYPE_LIMIT"
    ORDER_TYPE_STOP = "ORDER_TYPE_STOP"
    ORDER_TYPE_STOP_LIMIT = "ORDER_TYPE_STOP_LIMIT"
    ORDER_TYPE_MULTI_LEG = "ORDER_TYPE_MULTI_LEG"

class TimeInForce(str, Enum):
    """Срок действия заявки."""
    TIME_IN_FORCE_UNSPECIFIED = "TIME_IN_FORCE_UNSPECIFIED"
    TIME_IN_FORCE_DAY = "TIME_IN_FORCE_DAY"
    TIME_IN_FORCE_GOOD_TILL_CANCEL = "TIME_IN_FORCE_GOOD_TILL_CANCEL"
    TIME_IN_FORCE_GOOD_TILL_CROSSING = "TIME_IN_FORCE_GOOD_TILL_CROSSING"
    TIME_IN_FORCE_EXT = "TIME_IN_FORCE_EXT"
    TIME_IN_FORCE_ON_OPEN = "TIME_IN_FORCE_ON_OPEN"
    TIME_IN_FORCE_ON_CLOSE = "TIME_IN_FORCE_ON_CLOSE"
    TIME_IN_FORCE_IOC = "TIME_IN_FORCE_IOC"
    TIME_IN_FORCE_FOK = "TIME_IN_FORCE_FOK"

class StopCondition(str, Enum):
    """Условие срабатывания стоп заявки."""
    STOP_CONDITION_UNSPECIFIED = "STOP_CONDITION_UNSPECIFIED"
    STOP_CONDITION_LAST_UP = "STOP_CONDITION_LAST_UP"
    STOP_CONDITION_LAST_DOWN = "STOP_CONDITION_LAST_DOWN"

class OrderStatus(str, Enum):
    """Статус заявки."""
    ORDER_STATUS_UNSPECIFIED = "ORDER_STATUS_UNSPECIFIED"
    ORDER_STATUS_NEW = "ORDER_STATUS_NEW"
    ORDER_STATUS_PARTIALLY_FILLED = "ORDER_STATUS_PARTIALLY_FILLED"
    ORDER_STATUS_FILLED = "ORDER_STATUS_FILLED"
    ORDER_STATUS_DONE_FOR_DAY = "ORDER_STATUS_DONE_FOR_DAY"
    ORDER_STATUS_CANCELED = "ORDER_STATUS_CANCELED"
    ORDER_STATUS_REPLACED = "ORDER_STATUS_REPLACED"
    ORDER_STATUS_PENDING_CANCEL = "ORDER_STATUS_PENDING_CANCEL"
    ORDER_STATUS_REJECTED = "ORDER_STATUS_REJECTED"
    ORDER_STATUS_SUSPENDED = "ORDER_STATUS_SUSPENDED"
    ORDER_STATUS_PENDING_NEW = "ORDER_STATUS_PENDING_NEW"
    ORDER_STATUS_EXPIRED = "ORDER_STATUS_EXPIRED"
    ORDER_STATUS_FAILED = "ORDER_STATUS_FAILED"
    ORDER_STATUS_FORWARDING = "ORDER_STATUS_FORWARDING"
    ORDER_STATUS_WAIT = "ORDER_STATUS_WAIT"
    ORDER_STATUS_DENIED_BY_BROKER = "ORDER_STATUS_DENIED_BY_BROKER"
    ORDER_STATUS_REJECTED_BY_EXCHANGE = "ORDER_STATUS_REJECTED_BY_EXCHANGE"
    ORDER_STATUS_WATCHING = "ORDER_STATUS_WATCHING"
    ORDER_STATUS_EXECUTED = "ORDER_STATUS_EXECUTED"
    ORDER_STATUS_DISABLED = "ORDER_STATUS_DISABLED"
    ORDER_STATUS_LINK_WAIT = "ORDER_STATUS_LINK_WAIT"
    ORDER_STATUS_SL_GUARD_TIME = "ORDER_STATUS_SL_GUARD_TIME"
    ORDER_STATUS_SL_EXECUTED = "ORDER_STATUS_SL_EXECUTED"
    ORDER_STATUS_SL_FORWARDING = "ORDER_STATUS_SL_FORWARDING"
    ORDER_STATUS_TP_GUARD_TIME = "ORDER_STATUS_TP_GUARD_TIME"
    ORDER_STATUS_TP_EXECUTED = "ORDER_STATUS_TP_EXECUTED"
    ORDER_STATUS_TP_CORRECTION = "ORDER_STATUS_TP_CORRECTION"
    ORDER_STATUS_TP_FORWARDING = "ORDER_STATUS_TP_FORWARDING"
    ORDER_STATUS_TP_CORR_GUARD_TIME = "ORDER_STATUS_TP_CORR_GUARD_TIME"

class ValidBefore(str, Enum):
    """Срок действия условной заявки."""
    VALID_BEFORE_UNSPECIFIED = "VALID_BEFORE_UNSPECIFIED"
    VALID_BEFORE_END_OF_DAY = "VALID_BEFORE_END_OF_DAY"
    VALID_BEFORE_GOOD_TILL_CANCEL = "VALID_BEFORE_GOOD_TILL_CANCEL"
    VALID_BEFORE_GOOD_TILL_DATE = "VALID_BEFORE_GOOD_TILL_DATE"

class TimeFrame(str, Enum):
    """Доступные таймфреймы для свечей."""
    TIME_FRAME_UNSPECIFIED = "TIME_FRAME_UNSPECIFIED"
    TIME_FRAME_M1 = "TIME_FRAME_M1"
    TIME_FRAME_M5 = "TIME_FRAME_M5"
    TIME_FRAME_M15 = "TIME_FRAME_M15"
    TIME_FRAME_M30 = "TIME_FRAME_M30"
    TIME_FRAME_H1 = "TIME_FRAME_H1"
    TIME_FRAME_H2 = "TIME_FRAME_H2"
    TIME_FRAME_H4 = "TIME_FRAME_H4"
    TIME_FRAME_H8 = "TIME_FRAME_H8"
    TIME_FRAME_D = "TIME_FRAME_D"
    TIME_FRAME_W = "TIME_FRAME_W"
    TIME_FRAME_MN = "TIME_FRAME_MN"
    TIME_FRAME_QR = "TIME_FRAME_QR"

class OrderBookAction(str, Enum):
    """Команда в стакане."""
    ACTION_UNSPECIFIED = "ACTION_UNSPECIFIED"
    ACTION_REMOVE = "ACTION_REMOVE"
    ACTION_ADD = "ACTION_ADD"
    ACTION_UPDATE = "ACTION_UPDATE"

class Interval(BaseModel):
    """Структура интервала времени."""
    start_time: str = Field(description="Начало интервала в формате %Y-%m-%dT%H:%M:%SZ")
    end_time: str = Field(description="Конец интервала в формате %Y-%m-%dT%H:%M:%SZ")